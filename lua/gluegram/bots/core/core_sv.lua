local BOT = TLG("167720993:AAEzqbwu8Jpq9-L3tblzrPXR1t_ywYcx5Fw",TLG.SERV)
	:SetListenPort(29000 + ServerID())
	:SetMaster(TLG.SERV == "kosson")
	:SetMotd(function()
		return "üïó –ê–ø—Ç–∞–π–º —Å–µ—Ä–≤–µ—Ä–∞: " .. string.NiceTime(CurTime())
	end)




local function processCommand(CMD,MSG,tArgs)
	CMD:Call(MSG,tArgs)
	-- "testasdfjhk asdf asd" in tArgs
end

local function table_remove(tab,index)
	local ntab = {}

	for i = 1,#tab do
		if i == index then continue end

		ntab[#ntab + 1] = tab[i]
	end

	return ntab
end


BOT:UpdatesHook(function(UPD)
	-- EXAMPLE: /login@my_info_bot testasdfjhk asdf asd
	if !UPD["message"]["text"] or UPD["message"]["text"][1] ~= "/" then return end -- –µ—Å–ª–∏ –Ω–µ –∫–æ–º–∞–Ω–¥–∞

	local MSG  = UPD:Message()
	local USER = MSG:From()

	-- –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∫–æ–º–∞–Ω–¥ –≤ –æ–¥–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏
	local parts = string.Explode(";",MSG:Text())
	for i = 1,math.Clamp(#parts,0,5) do -- –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –∞–±—É–∑–∞
		parts[i] = parts[i]:Trim() -- /cmd;  ; /cmd"
		if parts[i] == "" then continue end

		local pieces = parts[i]:Split(" ")
		local cmd = pieces[1]:Split("@")[1]:sub(2) -- /cmd@botname

		local CMD = BOT:GetCommands()[cmd]
		if CMD then

			-- –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É, –µ—Å–ª–∏ –Ω—É–∂–µ–Ω –º–∞—Å—Ç–µ—Ä —Å–µ—Ä–≤–µ—Ä, –∞ –º—ã –∏–º –Ω–µ —è–≤–ª—è–µ–º—Å—è
			if CMD:ForMaster() and !TLG.CFG.isMasterServer then
				return
			end

			-- –ù—É–∂–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è, –∞ –º—ã –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–∏—Ä–æ–≤–∞–Ω—ã
			if !CMD:IsPublic() and !BOT:IsUserAuthed(USER) then
				BOT:Message(USER,"–í—ã –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–∏—Ä–æ–≤–∞–Ω—ã. /login " .. BOT:Name()):Send()
				return
			end


			processCommand(CMD,UPD:Message(), table_remove(pieces,1))

		else
			BOT:Message(USER,"–ö–æ–º–∞–Ω–¥—ã " .. cmd .. " –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"):Send()
		end
	end
end,"core")





--[[-------------------------------------------------------------------------
	BASE Commands
---------------------------------------------------------------------------]]

-- login
BOT:AddCommand("login",function(MSG,args)
	if true then return "–ë–æ—Ç –ø–æ–∫–∞ –≤—ã–∫–ª—é—á–µ–Ω" end

	if !args[1] and BOT:IsMaster() then
		return "–ù—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ –∫–æ–¥–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –±–æ—Ç–∞, –∫ –∫–æ—Ç–æ—Ä–æ–º—É —Ö–æ—Ç–∏—Ç–µ –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è. –ü—Ä–∏–º–µ—Ä: /login " .. BOT:Name()
	end

	--                                  \/ /login *, /login ser*er
	if args[1] == BOT:Name() or string.find(BOT:Name(),args[1]) then
		BOT:Auth(MSG:From(),true)
		return "–ø–æ–¥–∫–ª—é—á–µ–Ω." .. (BOT.motd and ("\n\nMOTD:\n" .. BOT.motd()) or "")
	end
end)
	:SetPublic(true)
	:SetHelp("–ü–∞—Ä–∞–º–µ—Ç—Ä–æ–º –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Ç–æ—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –±–æ—Ç–∞ –∏–ª–∏ –∂–µ –µ–≥–æ —á–∞—Å—Ç—å. –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç \"*\"")
	:SetDescription("–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º –≤ –∞—Ä–≥—É–º–µ–Ω—Ç–∞—Ö –±–æ—Ç–µ. –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –±–æ—Ç–æ–≤: /bots")



-- exit
BOT:AddCommand("exit",function(MSG,args)
	if !args[1] or args[1] == BOT:Name() or string.find(BOT:Name(),args[1]) then
		BOT:Auth(MSG:From(),false)
		return "–û—Ç–∫–ª—é—á–∏–ª–∏—Å—å –æ—Ç " .. BOT:Name()
	end
end)
	:SetPublic(true)
	:SetHelp("–ü–∞—Ä–∞–º–µ—Ç—Ä–æ–º –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Ç–æ—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –±–æ—Ç–∞ –∏–ª–∏ –∂–µ –µ–≥–æ —á–∞—Å—Ç—å. –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç \"*\"")
	:SetDescription("–†—É—á–Ω–æ–µ –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ –æ—Ç —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –±–æ—Ç–∞ –∏–ª–∏ –æ—Ç –≤—Å–µ—Ö, –µ—Å–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–µ —É–∫–∞–∑–∞–Ω–æ. –ü–æ—Å–ª–µ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã –ø–µ—Ä–µ—Å—Ç–∞–Ω—É—Ç –≤–≤–æ–¥–∏—Ç—å—Å—è –¥–æ —Å–ª–µ–¥—É—é—â–µ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ (–ø–æ–ª–µ–∑–Ω–æ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ —Å–µ—Ä–≤–µ—Ä–∞–º–∏)")


-- help
BOT:AddCommand("help",function(MSG,args)
	if BOT:GetCommand(args[1]) then
		return BOT:GetCommand(args[1]):Help()
	end

	local inf =
		NM([[
		*–†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é GLUA –±–æ—Ç–∞ ]] .. BOT:Name() .. [[*

		–í—ã –º–æ–∂–µ—Ç–µ –≤—ã–ø–æ–ª–Ω—è—Ç—å –¥–æ 5 –∫–æ–º–∞–Ω–¥ —Å—Ä–∞–∑—É. –î–ª—è —ç—Ç–æ–≥–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–≤–æ–¥–∏—Ç—å –∏—Ö —á–µ—Ä–µ–∑ ";"
		–ü—Ä–∏–º–µ—Ä: /login \* ; /exit

		–ß—Ç–æ–±—ã –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç –ø–æ–ª—É—á–∏—Ç—å –∫–æ—Ä–æ—Ç–∫—É—é —Å–ø—Ä–∞–≤–∫—É –æ –Ω—É–∂–Ω–æ–π –∫–æ–º–∞–Ω–¥–µ, –≤–≤–µ–¥–∏—Ç–µ –µ–µ —Å –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ -help.
		–ü—Ä–∏–º–µ—Ä: /login -help

		–ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∫–æ–º–∞–Ω–¥—ã —Å—Ç–∞–Ω—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ (/login ]] .. BOT:Name() .. [[)

		]])

	for cmd,CMD in pairs( BOT:GetCommands() ) do
		if CMD:IsPublic() or BOT:IsUserAuthed( MSG:From() ) then
			if CMD.aliases and CMD.aliases[cmd] then continue end -- –∞–ª–∏–∞—Å

			inf = inf .. "*/" .. cmd .. "*" .. (CMD:IsPublic() and " –û–±—â–∞—è" or "") .. (CMD:ForMaster() and " Master" or "")

			-- –ö–æ–º–∞–Ω–¥–∞ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∞–ª–∏–∞—Å–æ–º, –Ω–æ –∏–º–µ–µ—Ç –∏—Ö
			if CMD.aliases then
				inf = inf .. "\n*–ê–ª–∏–∞—Å—ã:* " .. table.ConcatKeys(CMD.aliases, ", ")
			end

			inf = inf .. "\n`" .. CMD:Description() .. "`\n\n"
		end
	end

	return inf,"Markdown"
end)
	:SetPublic(true)
	:SetForMaster(true)
	:SetHelp("/help command –æ—Ç–æ–±—Ä–∞–∑–∏—Ç –ø–æ–º–æ—â—å –ø–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∫–æ–º–∞–Ω–¥–µ, —Ä–æ–≤–Ω–æ –∫–∞–∫ –∏ /command --help")
	:SetDescription("–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –∫–æ–º–∞–Ω–¥ –∏ –∫—Ä–∞—Ç–∫—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –Ω–∏–º. –ü–æ—Å–ª–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —Å–ø–∏—Å–æ–∫ –º–æ–∂–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å—Å—è. –¢–∞–∫–∂–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –Ω–µ–∫–æ—Ç–æ—Ä—É—é –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é—é –ø–æ–ª–µ–∑–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é")