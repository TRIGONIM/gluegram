local BOT = TLG_CORE_BOT

-- bots
BOT:AddCommand("bots",function(MSG)
	return (BOT:GetSession(MSG:From()) and "‚úÖ" or "‚ùå") .. " –Ø " .. BOT:Name() .. (BOT:IsMaster() and " (MASTER)" or "")
end)
	:SetPublic(true)
	:AddAlias("servers"):AddAlias("ping")
	:SetDescription("–í—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –±–æ—Ç–æ–≤. –ê–∫—Ç–∏–≤–Ω—ã–µ –±–æ—Ç—ã –∏–º–µ—é—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∏–∫–æ–Ω–∫—É")


-- cmd
local rectxt = ""
BOT:AddCommand("cmd",function(MSG,args)
	if !args[1] then
		return "–ù—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ —Å–∞–º—É –∫–æ–º–∞–Ω–¥—É. –ü—Ä–∏–º–µ—Ä –≤ --help"
	end

	-- –ï—Å–ª–∏ enginespew –Ω–µ—Ç, —Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ—Ç–≤–µ—Ç–æ–º –±—É–¥–µ—Ç –ø—É—Å—Ç—ã–º
	hook.Add("EngineSpew","TLG.TopKostil",function(_,msg)
		rectxt = rectxt .. "üí© " .. msg
	end)


	RunConsoleCommand(args[1], unpack(args,2))

	timer.Simple(.4,function()
		hook.Remove("EngineSpew","TLG.TopKostil")

		-- –Ω–µ return –∏–±–æ –≤ —Ç–∞–π–º–µ—Ä–µ
		BOT:Message(MSG:Chat(),string.format("–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã %s —Å –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏ [%s]:\n%s", args[1],string.Implode(" ",args),rectxt)):Send()

		rectxt = ""
	end)
end)
	:SetHelp("/cmd status")
	:SetDescription("–í—ã–ø–æ–ª–Ω—è–µ—Ç –≤–≤–µ–¥–µ–Ω–Ω—É—é –∫–æ–Ω—Å–æ–ª—å–Ω—É—é –∫–æ–º–∞–Ω–¥—É –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ, –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã–º –∑–∞ –±–æ—Ç–æ–º")


-- serverinfo
BOT:AddCommand("serverinfo",function(MSG)
	local plys = player.GetAll()

	local plys_props = {}
	for k,v in pairs(ents.GetAll()) do
		if !IsValid(v) or v:GetPersistent() then continue end

		if IsValid(v:CPPIGetOwner()) then
			local _, uid = v:CPPIGetOwner()
			plys_props[uid] = plys_props[uid] or {}
			plys_props[uid] [#plys_props[uid] + 1] = v
		end
	end

	local props = 0 -- counter
	for _,t in pairs(plys_props) do
		props = props + #t
	end

	local plysinf =
		"üë• –û–Ω–ª–∞–π–Ω: " .. #plys .. "/" .. game.MaxPlayers() .. "\n" ..
		"‚öΩÔ∏è –ü—Ä–æ–ø–æ–≤ –∏–≥—Ä–æ–∫–æ–≤: " .. props .. "\n" ..
		"=======================" .. "\n"

	for i = 1, #plys do
		local ply = plys[i]
		local steamid = ply:SteamID()

		plysinf =
			plysinf ..
			"üë§ " .. ply:Nick() .. "\n" ..
			"üé´ " .. steamid .. "\n" ..
			"üïµ –£–±–∏–π—Å—Ç–≤, —Å–º–µ—Ä—Ç–µ–π: " .. ply:Frags() .. "|" .. ply:Deaths() .. "\n" ..
			"‚öí –ü—Ä–æ–ø–æ–≤: " .. (plys_props[steamid] and #plys_props[steamid] or 0) .. "\n" ..
			"------------------------------------"  .. "\n"
	end

	return plysinf
end):SetDescription("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–µ—Ä–µ, –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã–º –∑–∞ –±–æ—Ç–æ–º (–û–Ω–ª–∞–π–Ω, –∞–ø—Ç–∞–π–º, —É–±–∏–π—Å—Ç–≤–∞ –∏ —Å–º–µ—Ä—Ç–∏ –æ–Ω–ª–∞–π–Ω –∏–≥—Ä–æ–∫–æ–≤, –∞ —Ç–∞–∫–∂–µ –∏—Ö –Ω–∏–∫ –∏ —Å—Ç–∏–º–∞–π–¥–∏")


-- // say to server chat
BOT:AddCommand("/",function(MSG,args)
	qq.CMessage(player.GetAll(),("[" .. MSG:From() .. "] ") .. string.Implode(" ",args),Color(255,50,50))

	return "–°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ"
end):SetDescription("–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω–æ–≥–æ –∑–∞ –±–æ—Ç–æ–º —Å–µ—Ä–≤–µ—Ä–∞. –ü–µ—Ä–µ–¥ –≤–∞—à–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º –±—É–¥–µ—Ç @telegramlogin")


-- chat, test
BOT:AddCommand("chat",function(MSG,args)
	local USER = MSG:From()
	local CHAT = MSG:Chat()

	return ("\n–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π, %s(*%s*)%s!\n*–¢–≤–æ–π ID:* %s\n\n*ID —Å–æ–æ–±—â–µ–Ω–∏—è:* %s\n*–î–∞—Ç–∞:*%s%s\n\n*ID —á–∞—Ç–∞:* %s\n*–¢–∏–ø:* %s")
		:format(
			USER:FName(), USER:Login() or "nologin", USER:LName() and (" " .. USER:LName()) or "", USER:ID(),
			MSG:ID(), MSG:Date(), args[1] and ("\n–ê—Ä–≥—É–º–µ–Ω—Ç—ã: " .. string.Implode(" ",args)) or "",
			CHAT:ID(), CHAT:Type()
		),"Markdown"
end)
	:SetPublic(true)
	:AddAlias("test")
	:SetDescription("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–∫—É—â–µ–º —á–∞—Ç–µ")

local function tableConcat(t) -- —Å tostring
	local s = ""
	for i,v in ipairs(t) do
		s = s .. tostring(v) .. " "
	end
	return s:sub(1,-2)
end

-- logchat
local interceptors = {}
BOT:AddCommand("logchat",function(MSG)
	local CHAT = MSG:Chat()

	if interceptors[CHAT:ID()] then
		interceptors[CHAT:ID()] = nil

		if table.Count(interceptors) == 0 then
			hook.Remove("PlayerSay","TLG.ChatIntercept")
		end

		return "–ü–µ—Ä–µ—Ö–≤–∞—Ç –≤—ã–∫–ª—é—á–µ–Ω"
	end

	interceptors[CHAT:ID()] = CHAT

	local function sendMsg(t)
		for id,CHT in pairs(interceptors) do
			BOT:Message(CHT, t):Send()
		end
	end

	hook.Add("cmd.OnCommandRun","TLG.ChatIntercept",function(pl,CMD,args)
		sendMsg("[CMD] (" ..  pl:Nick() .. "): /" .. CMD:GetNiceName() .. " -> " .. tableConcat(args))
	end)
	hook.Add("PlayerSay","TLG.ChatIntercept",function(pl,txt,tm)
		sendMsg((tm and "[TEAM] " or "") .. "(" ..  pl:Nick() .. "): " .. txt)
	end)

	return "–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —á–∞—Ç–∞ –≤–∫–ª—é—á–µ–Ω–æ"
end):SetDescription("–†–µ—Ç—Ä–∞–Ω—Å–ª—è—Ü–∏—è –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ —á–∞—Ç–∞ —Å–≤—è–∑–∞–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ –≤ —á–∞—Ç —Ç–µ–ª–µ–≥—Ä–∞–º–º–∞. –ü–æ—Å–ª–µ –¥–µ–∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–æ–¥–æ–ª–∂–∞—Ç –ø–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞—Ç—å—Å—è, –µ—Å–ª–∏ –Ω–µ –≤—ã–∫–ª—é—á–∏—Ç—å –≤—Ä—É—á–Ω—É—é")


local pending_tasks = {} -- TODO —Å–¥–µ–ª–∞—Ç—å, —á—Ç–æ–±—ã –¥—Ä—É–≥–∏–µ —é–∑–µ—Ä—ã –Ω–µ –º–æ–≥–ª–∏ —É–¥–∞–ª—è—Ç—å —á—É–∂–∏–µ –∑–∞–¥–∞—á–∏
BOT:AddCommand("timer",function(MSG,args)
	if args[1] == "remove" then
		args[2] = tonumber(args[2])

		if !pending_tasks[ args[2] ] then
			return "–ó–∞–¥–∞—á–∞ —Å ID " .. args[2] .. " –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ /timer list"
		end

		pending_tasks[ args[2] ] = nil

		return "–ó–∞–¥–∞—á–∞ —É–¥–∞–ª–µ–Ω–∞ –∏ –Ω–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è"
	end

	if args[1] == "list" then
		local cmds = "\n"
		for id,t in pairs(pending_tasks) do -- pairs, —á—Ç–æ–±—ã –Ω–∏—á–µ–≥–æ –Ω–µ –ø—Ä–ø–æ—É—Å—Ç–∏—Ç—å, –µ—Å–ª–∏ —É–¥–∞–ª–∏—Ç—å –∏–∑ —Å–µ—Ä–µ–µ–¥–∏–Ω–∫–∏ —ç–ª–ª–µ–º–µ–Ω—Ç
			cmds = cmds .. "`" .. id .. "` *" .. t.cmd.cmd .. "* " .. table.concat(t.args," ") .. "\n" ..
			"`–í—ã–ø–æ–ª–Ω–∏—Ç—Å—è —á–µ—Ä–µ–∑ " .. timeToStr(t.call_in - CurTime()) .. "`\n\n"
		end

		return cmds ~= "" and cmds or "–°–ø–∏—Å–æ–∫ –ø—É—Å—Ç", "markdown"
	end

	local mins,scmd = args[1],args[2]
	local err =
		!mins and "–ù–µ —É–∫–∞–∑–∞–Ω–æ –≤—Ä–µ–º—è —Ç–∞–π–º–µ—Ä–∞" or
		!tonumber(mins) and "–í—Ä–µ–º—è –Ω—É–∂–Ω–æ —É–∫–∞–∑—ã–≤–∞—Ç—å —á–∏—Å–ª–æ–º" or
		!scmd and "–ù–µ —É–∫–∞–∑–∞–Ω–æ –¥–µ–π—Å—Ç–≤–∏–µ (–∫–æ–º–∞–Ω–¥–∞)"

	if err then
		return err
	end

	local CMD = BOT:GetCommand(scmd)
	if !CMD then
		return "–ö–æ–º–∞–Ω–¥—ã " .. scmd .. " –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
	end

	local tArgs = {}
	for i = 3,#args do
		tArgs[#tArgs + 1] = args[i]
	end

	local id = table.insert(pending_tasks,{
		cmd     = CMD,
		args    = tArgs,
		call_in = CurTime() + 60 * mins
	})

	timer.Simple(60 * mins,function()
		local task = pending_tasks[id]
		if task then
			task.cmd:Call(MSG, task.args)
			pending_tasks[id] = nil
		end
	end)

	return "–ö–æ–º–∞–Ω–¥–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è —á–µ—Ä–µ–∑ *" .. mins .. "* –º–∏–Ω." ..
	"\n*ID –∑–∞–¥–∞—á–∏*: " .. id ..
	"\n–í–≤–µ–¥–∏—Ç–µ /timer remove " .. id .. " –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏",
		"markdown"
end)
	:SetDescription(
		"–í—ã–ø–æ–ª–Ω—è–µ—Ç –∫–æ–º–∞–Ω–¥—É —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π. " ..
		"–ü–æ–ª–µ–∑–Ω–æ –¥–ª—è, –Ω–∞–ø—Ä–∏–º–µ—Ä, —Ä–µ—Å—Ç–∞—Ä—Ç–∞ —Å–µ—Ä–≤–µ—Ä–∞ —á–µ—Ä–µ–∑ –≤—Ä–µ–º—è, –µ—Å–ª–∏ —Å–∞–º —Ö–æ—á–µ—à—å —Å–ø–∞—Ç—å –∏ –Ω–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –æ—Ñ–Ω—É—Ç—å. " ..
		"–ò–ª–∏ –∂–µ –¥–ª—è –≤—ã–∫–ª—é—á–µ–Ω–∏—è –ª–æ–≥–≥–∏–Ω–≥–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —á–∞—Ç–∞"
	)
	:SetHelp("/timer MINS CMD CMD_ARGS. /timer list. /timer remove ID. /timer 1 cmd say –≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –º–∏–Ω—É—Ç—É –Ω–∞–ø–∏—à–µ—Ç—Å—è –æ—Ç –∫–æ–Ω—Å–æ–ª–∏")
