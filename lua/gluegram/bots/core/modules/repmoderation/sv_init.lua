local BOT = TLG.GetBot(TLG.SERV)


--[[-------------------------------------------------------------------------
	TODO –í—ã–Ω–µ—Å—Ç–∏ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–µ –º–µ—Å—Ç–æ, –∞ —Ç–æ —è –ø—Ä–æ—Å—Ç–æ –æ—Ö—É–µ–ª

local IKB = TLG.InlineKeyboard()
IKB:Line( IKB:Button("–ö–Ω–æ–ø–∫–∞"):SetCallBackData({
	key = "value",
}) )

local msg = BOT:Message(MSG:Chat(), "–ö–Ω–æ–ø–æ—á–∫–∏"):SetReplyMarkup(IKB)

TLG.SendAndHandleCBQ(BOT,msg,function(CBQ)
	local dat = CBQ:Data()
end)
---------------------------------------------------------------------------]]
BOT.CBQHandlers = BOT.CBQHandlers or {}
function TLG.SendAndHandleCBQ(bot,msg,fCallback)
	msg:Send(function(res)
		BOT.CBQHandlers[res:ID()] = fCallback
	end)
end

BOT:CBQHook(function(CBQ)
	if BOT.CBQHandlers[ CBQ.message.message_id ] then
		BOT.CBQHandlers[ CBQ.message.message_id ](CBQ)
	end
end,"SendAndHandleCBQ")





local function nickSid(sid)
	local pl = player.GetBySteamID(sid)
	return !pl and sid or ("(%s)%s"):format(sid,pl:Nick())
end

local msg = [[
	üé® –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–µ–ø—É—Ç–∞—Ü–∏–∏ (%s)
	–û–Ω: %s
	–ï–º—É: %s

	üè∑ %s
	‚úâ %s
]]

local om_msg = "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä @%s –æ—Ç—Ä–µ–∞–≥–∏—Ä–æ–≤–∞–ª –Ω–∞ —Å–æ–±—ã—Ç–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–µ–ø—É—Ç–∞—Ü–∏–∏ –∏ —É–¥–∞–ª–∏–ª –µ–µ.\n\n–°–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è:\n%s"

local function repRem(CBQ,id,author_sid)
	REP.RemAction(id,author_sid,true,function(ok)
		local login = CBQ:From():Login()

		local IKB = TLG.InlineKeyboard()
		IKB:Line(
			IKB:Button("–ë–∞–Ω —á–∞—Å"):SetCallBackData({
				ban = true,
				rep_id = id,
				sid  = author_sid,
				term = 60
			}),
			IKB:Button("–ë–∞–Ω —Å—É—Ç–∫–∏"):SetCallBackData({
				ban = true,
				rep_id = id,
				sid  = author_sid,
				term = 1440
			})
		)

		BOT:EditMessage(CBQ:Message(),"\n\n‚Ä¢ –†–µ–ø–∞ " .. (ok and "—É–¥–∞–ª–µ–Ω–∞" or "–£–ñ–ï —É–¥–∞–ª–µ–Ω–∞") .. ". –ú–æ–¥: @" .. login,true)
			:SetReplyMarkup(IKB)
			:Send()

		if !ok then return end

		OM.SendMessage(util.SteamIDTo64(author_sid),
			om_msg:format(login, string.Safe( CBQ:Message()["text"] )),

			"–£–¥–∞–ª–µ–Ω–∏–µ —Ä–µ–ø—É—Ç–∞—Ü–∏–∏"
		)
	end)
end


hook.Add("OnRepAdd","TLG",function(sFrom,pTo,iCategory,message,id)
	local IKB = TLG.InlineKeyboard()
	IKB:Line(
		IKB:Button("–£–¥–∞–ª–∏—Ç—å"):SetCallBackData({
			rem = true,
			rep_id = id,
			sid    = sFrom
		})
	)


	local MSG = BOT:Message(TLG_CONF_MOD, msg:format(
		id,
		nickSid(sFrom),
		nickSid(pTo:SteamID()),
		REP.getCatNameByID(iCategory),
		message
	)):SetReplyMarkup(IKB,BOT)

	TLG.SendAndHandleCBQ(BOT,MSG,function(CBQ)
		local dat = CBQ:Data()

		if dat.ban then
			RunConsoleCommand("ulx","banid",dat.sid,dat.term,"–û—Å—Ç. —Ä–µ–ø—É—Ç–∞—Ü–∏–∏ —Å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π –ø—Ä–∏—á–∏–Ω–æ–π")

			-- –¢–∞–π–º–µ—Ä, —á—Ç–æ–±—ã –æ–≤–µ—Ä—Ä–∞–π–¥–Ω—É—Ç—å —Ç–æ–ª—å–∫–æ —á—Ç–æ –∏–∑–º–µ–Ω–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ repRem
			timer.Simple(3,function()
				BOT:EditMessage(CBQ:Message(),"\n‚Ä¢ –ê–≤—Ç–æ—Ä–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª @" .. CBQ:From():Login(),true)
					:Send()
			end)

		elseif dat.rem then
			repRem(
				CBQ,
				dat.rep_id,
				dat.sid
			)

		end
	end)
end)

