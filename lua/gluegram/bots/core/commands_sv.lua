local BOT = TLG.BOTS[TLG.SERV]

-- bots
BOT:AddCommand("bots",function(MSG)
	return (BOT:IsUserAuthed(MSG:From()) and "‚úÖ" or "‚ùå") .. " –Ø " .. BOT:Name() .. (BOT:IsMaster() and " (MASTER)" or "")
end)
	:SetPublic(true)
	:AddAlias("servers"):AddAlias("ping")
	:SetDescription("–í—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –±–æ—Ç–æ–≤. –ê–∫—Ç–∏–≤–Ω—ã–µ –±–æ—Ç—ã –∏–º–µ—é—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∏–∫–æ–Ω–∫—É")


-- cmd
local rectxt = ""
BOT:AddCommand("cmd",function(MSG,args)
	if !args[1] then
		return "–ù—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ —Å–∞–º—É –∫–æ–º–∞–Ω–¥—É. –ü—Ä–∏–º–µ—Ä –≤ --help"
	end

	-- –ï—Å–ª–∏ enginespew –Ω–µ—Ç, —Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ—Ç–≤–µ—Ç–æ–º –±—É–¥–µ—Ç –ø—É—Å—Ç—ã–º
	hook.Add("EngineSpew","TLG.TopKostil",function(_,msg)
		rectxt = rectxt .. "üí© " .. msg
	end)


	RunConsoleCommand(args[1], unpack(args,2))

	timer.Simple(.4,function()
		hook.Remove("EngineSpew","TLG.TopKostil")

		-- –Ω–µ return –∏–±–æ –≤ —Ç–∞–π–º–µ—Ä–µ
		BOT:Message(MSG:Chat(),string.format("–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã %s —Å –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏ [%s]:\n%s", args[1],string.Implode(" ",args),rectxt)):Send()

		rectxt = ""
	end)
end)
	:SetHelp("/cmd status")
	:SetDescription("–í—ã–ø–æ–ª–Ω—è–µ—Ç –≤–≤–µ–¥–µ–Ω–Ω—É—é –∫–æ–Ω—Å–æ–ª—å–Ω—É—é –∫–æ–º–∞–Ω–¥—É –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ, –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã–º –∑–∞ –±–æ—Ç–æ–º")


-- serverinfo
BOT:AddCommand("serverinfo",function(MSG)
	local plys = player.GetAll()

	local plys_props = {}
	for k,v in pairs(ents.GetAll()) do
		if !IsValid(v) or v:GetPersistent() then continue end

		if v.FPPOwnerID then
			plys_props[v.FPPOwnerID] = plys_props[v.FPPOwnerID] or {}
			plys_props[v.FPPOwnerID][#plys_props[v.FPPOwnerID] + 1] = v
		end
	end

	local props = 0 -- counter
	for stid,t in pairs(plys_props) do
		props = props + #t
	end

	local plysinf =
		"üë• –û–Ω–ª–∞–π–Ω: " .. #plys .. "/" .. game.MaxPlayers() .. "\n" ..
		"‚öΩÔ∏è –ü—Ä–æ–ø–æ–≤ –∏–≥—Ä–æ–∫–æ–≤: " .. props .. "\n" ..
		"=======================" .. "\n"

	for i = 1, #plys do
		local ply = plys[i]
		local steamid = ply:SteamID()

		plysinf =
			plysinf ..
			"üë§ " .. ply:Nick() .. "\n" ..
			"üé´ " .. steamid .. "\n" ..
			"üïµ –£–±–∏–π—Å—Ç–≤, —Å–º–µ—Ä—Ç–µ–π: " .. ply:Frags() .. "|" .. ply:Deaths() .. "\n" ..
			"‚öí –ü—Ä–æ–ø–æ–≤: " .. (plys_props[steamid] and #plys_props[steamid] or 0) .. "\n" ..
			"------------------------------------"  .. "\n"
	end

	return plysinf
end):SetDescription("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–µ—Ä–µ, –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã–º –∑–∞ –±–æ—Ç–æ–º (–û–Ω–ª–∞–π–Ω, –∞–ø—Ç–∞–π–º, —É–±–∏–π—Å—Ç–≤–∞ –∏ —Å–º–µ—Ä—Ç–∏ –æ–Ω–ª–∞–π–Ω –∏–≥—Ä–æ–∫–æ–≤, –∞ —Ç–∞–∫–∂–µ –∏—Ö –Ω–∏–∫ –∏ —Å—Ç–∏–º–∞–π–¥–∏")


-- // say to server chat
BOT:AddCommand("/",function(MSG,args)
	qq.CMessage(player.GetAll(),("[" .. MSG:From() .. "] ") .. string.Implode(" ",args),Color(255,50,50))

	return "–°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ"
end):SetDescription("–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω–æ–≥–æ –∑–∞ –±–æ—Ç–æ–º —Å–µ—Ä–≤–µ—Ä–∞. –ü–µ—Ä–µ–¥ –≤–∞—à–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º –±—É–¥–µ—Ç @telegramlogin")


-- chat, test
BOT:AddCommand("chat",function(MSG,args)
	local USER = MSG:From()
	local CHAT = MSG:Chat()

	return ("\n–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π, %s(*%s*)%s!\n*–¢–≤–æ–π ID:* %s\n\n*ID —Å–æ–æ–±—â–µ–Ω–∏—è:* %s\n*–î–∞—Ç–∞:*%s%s\n\n*ID —á–∞—Ç–∞:* %s\n*–¢–∏–ø:* %s")
		:format(
			USER:FName(), USER:Login() or "nologin", USER:LName() and (" " .. USER:LName()) or "", USER:ID(),
			MSG:ID(), MSG:Date(), args[1] and ("\n–ê—Ä–≥—É–º–µ–Ω—Ç—ã: " .. string.Implode(" ",args)) or "",
			CHAT:ID(), CHAT:Type()
		),"Markdown"
end)
	:SetPublic(true)
	:AddAlias("test")
	:SetDescription("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–∫—É—â–µ–º —á–∞—Ç–µ")


-- logchat
local interceptors = {}
BOT:AddCommand("logchat",function(MSG)
	local CHAT = MSG:Chat()

	if interceptors[CHAT:ID()] then
		interceptors[CHAT:ID()] = nil

		if table.Count(interceptors) == 0 then
			hook.Remove("PlayerSay","TLG.ChatIntercept")
		end

		return "–ü–µ—Ä–µ—Ö–≤–∞—Ç –≤—ã–∫–ª—é—á–µ–Ω"
	end

	interceptors[CHAT:ID()] = CHAT

	hook.Add("PlayerSay","TLG.ChatIntercept",function(ply,txt,tm)
		for id,CHT in pairs(interceptors) do
			BOT:Message(CHT, "(" ..  ply:Nick() .. "): " .. txt ):Send()
		end
	end)

	return "–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —á–∞—Ç–∞ –≤–∫–ª—é—á–µ–Ω–æ"
end):SetDescription("–†–µ—Ç—Ä–∞–Ω—Å–ª—è—Ü–∏—è –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ —á–∞—Ç–∞ —Å–≤—è–∑–∞–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ –≤ —á–∞—Ç —Ç–µ–ª–µ–≥—Ä–∞–º–º–∞. –ü–æ—Å–ª–µ –¥–µ–∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–æ–¥–æ–ª–∂–∞—Ç –ø–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞—Ç—å—Å—è, –µ—Å–ª–∏ –Ω–µ –≤—ã–∫–ª—é—á–∏—Ç—å –≤—Ä—É—á–Ω—É—é")
